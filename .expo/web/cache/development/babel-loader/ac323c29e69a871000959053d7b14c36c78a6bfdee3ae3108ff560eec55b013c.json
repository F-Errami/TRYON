{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"speed\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from \"../helpers/glsl/distort.vert.glsl.js\";\nvar DistortMaterialImpl = function (_MeshPhysicalMaterial) {\n  _inherits(DistortMaterialImpl, _MeshPhysicalMaterial);\n  var _super = _createSuper(DistortMaterialImpl);\n  function DistortMaterialImpl() {\n    var _this;\n    var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, DistortMaterialImpl);\n    _this = _super.call(this, parameters);\n    _this.setValues(parameters);\n    _this._time = {\n      value: 0\n    };\n    _this._distort = {\n      value: 0.4\n    };\n    _this._radius = {\n      value: 1\n    };\n    return _this;\n  }\n  _createClass(DistortMaterialImpl, [{\n    key: \"onBeforeCompile\",\n    value: function onBeforeCompile(shader) {\n      shader.uniforms.time = this._time;\n      shader.uniforms.radius = this._radius;\n      shader.uniforms.distort = this._distort;\n      shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n      shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      return this._time.value;\n    },\n    set: function set(v) {\n      this._time.value = v;\n    }\n  }, {\n    key: \"distort\",\n    get: function get() {\n      return this._distort.value;\n    },\n    set: function set(v) {\n      this._distort.value = v;\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this._radius.value;\n    },\n    set: function set(v) {\n      this._radius.value = v;\n    }\n  }]);\n  return DistortMaterialImpl;\n}(MeshPhysicalMaterial);\nvar MeshDistortMaterial = React.forwardRef(function (_ref, ref) {\n  var _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? 1 : _ref$speed,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(function () {\n      return new DistortMaterialImpl();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    material = _React$useState2[0];\n  useFrame(function (state) {\n    return material && (material.time = state.clock.getElapsedTime() * speed);\n  });\n  return React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"names":["_extends","React","MeshPhysicalMaterial","useFrame","distort","DistortMaterialImpl","_MeshPhysicalMaterial","_inherits","_super","_createSuper","_this","parameters","arguments","length","undefined","_classCallCheck","call","setValues","_time","value","_distort","_radius","_createClass","key","onBeforeCompile","shader","uniforms","time","radius","vertexShader","replace","get","set","v","MeshDistortMaterial","forwardRef","_ref","ref","_ref$speed","speed","props","_objectWithoutProperties","_excluded","_React$useState","useState","_React$useState2","_slicedToArray","material","state","clock","getElapsedTime","createElement","object","attach"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}