{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { EXRLoader, RGBELoader } from 'three-stdlib';\nimport { suspend } from 'suspend-react';\nimport { presetsObj } from \"../helpers/environment-assets.js\";\nvar CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\nvar isPromise = function isPromise(promise) {\n  return typeof promise === 'object' && typeof promise.then === 'function';\n};\nvar isArray = function isArray(arr) {\n  return Array.isArray(arr);\n};\nfunction useEnvironment() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$files = _ref.files,\n    files = _ref$files === void 0 ? ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'] : _ref$files,\n    _ref$path = _ref.path,\n    path = _ref$path === void 0 ? '' : _ref$path,\n    _ref$preset = _ref.preset,\n    preset = _ref$preset === void 0 ? undefined : _ref$preset,\n    _ref$encoding = _ref.encoding,\n    encoding = _ref$encoding === void 0 ? undefined : _ref$encoding,\n    extensions = _ref.extensions;\n  var loader = null;\n  var isCubeMap = false;\n  var extension;\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n  if (isPromise(files)) {\n    files = suspend(function () {\n      var _ref2 = _asyncToGenerator(function* (promise) {\n        var result = yield promise;\n        return result.default;\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [files]);\n    loader = EXRLoader;\n  } else {\n    var _files$split$pop;\n    isCubeMap = isArray(files);\n    extension = !isArray(files) && ((_files$split$pop = files.split('.').pop()) == null ? void 0 : _files$split$pop.toLowerCase());\n    loader = isCubeMap ? CubeTextureLoader : extension === 'hdr' ? RGBELoader : extension === 'exr' ? EXRLoader : null;\n  }\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    loader.setPath == null ? void 0 : loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  var texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  var sRGBEncoding = 3001;\n  var LinearEncoding = 3000;\n  if ('colorSpace' in texture) texture.colorSpace = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? 'srgb' : 'srgb-linear';else texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\nexport { useEnvironment };","map":{"version":3,"names":["useLoader","CubeReflectionMapping","EquirectangularReflectionMapping","CubeTextureLoader","EXRLoader","RGBELoader","suspend","presetsObj","CUBEMAP_ROOT","isPromise","promise","then","isArray","arr","Array","useEnvironment","_ref","arguments","length","undefined","_ref$files","files","_ref$path","path","_ref$preset","preset","_ref$encoding","encoding","extensions","loader","isCubeMap","extension","Error","Object","keys","join","_ref2","_asyncToGenerator","result","default","_x","apply","_files$split$pop","split","pop","toLowerCase","loaderResult","setPath","texture","mapping","sRGBEncoding","LinearEncoding","colorSpace"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/node_modules/@react-three/drei/core/useEnvironment.js"],"sourcesContent":["import { useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { EXRLoader, RGBELoader } from 'three-stdlib';\nimport { suspend } from 'suspend-react';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\n\nconst isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst isArray = arr => Array.isArray(arr);\n\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n} = {}) {\n  let loader = null;\n  let isCubeMap = false;\n  let extension;\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  if (isPromise(files)) {\n    // Using promises that return inline-EXR URLs by default\n    files = suspend(async promise => {\n      const result = await promise;\n      return result.default;\n    }, [files]);\n    loader = EXRLoader;\n  } else {\n    var _files$split$pop;\n\n    // Everything else\n    isCubeMap = isArray(files);\n    extension = !isArray(files) && ((_files$split$pop = files.split('.').pop()) == null ? void 0 : _files$split$pop.toLowerCase());\n    loader = isCubeMap ? CubeTextureLoader : extension === 'hdr' ? RGBELoader : extension === 'exr' ? EXRLoader : null;\n  }\n\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath == null ? void 0 : loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  const sRGBEncoding = 3001;\n  const LinearEncoding = 3000;\n  if ('colorSpace' in texture) texture.colorSpace = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? 'srgb' : 'srgb-linear';else texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nexport { useEnvironment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}