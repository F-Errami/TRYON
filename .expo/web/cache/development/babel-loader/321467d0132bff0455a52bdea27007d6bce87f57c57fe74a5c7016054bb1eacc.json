{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"src\", \"skipFill\", \"skipStrokes\", \"fillMaterial\", \"strokeMaterial\", \"fillMeshProps\", \"strokeMeshProps\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect, Fragment } from 'react';\nimport { DoubleSide } from 'three';\nimport { SVGLoader } from 'three-stdlib';\nvar Svg = forwardRef(function R3FSvg(_ref, ref) {\n  var src = _ref.src,\n    skipFill = _ref.skipFill,\n    skipStrokes = _ref.skipStrokes,\n    fillMaterial = _ref.fillMaterial,\n    strokeMaterial = _ref.strokeMaterial,\n    fillMeshProps = _ref.fillMeshProps,\n    strokeMeshProps = _ref.strokeMeshProps,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var svg = useLoader(SVGLoader, !src.startsWith('<svg') ? src : `data:image/svg+xml;utf8,${src}`);\n  var strokeGeometries = useMemo(function () {\n    return skipStrokes ? [] : svg.paths.map(function (path) {\n      var _path$userData;\n      return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === undefined || path.userData.style.stroke === 'none' ? null : path.subPaths.map(function (subPath) {\n        return SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\n      });\n    });\n  }, [svg, skipStrokes]);\n  useEffect(function () {\n    return function () {\n      return strokeGeometries.forEach(function (group) {\n        return group && group.map(function (g) {\n          return g.dispose();\n        });\n      });\n    };\n  }, [strokeGeometries]);\n  return React.createElement(\"object3D\", _extends({\n    ref: ref\n  }, props), React.createElement(\"object3D\", {\n    scale: [1, -1, 1]\n  }, svg.paths.map(function (path, p) {\n    var _path$userData2, _path$userData3;\n    return React.createElement(Fragment, {\n      key: p\n    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== undefined && path.userData.style.fill !== 'none' && SVGLoader.createShapes(path).map(function (shape, s) {\n      return React.createElement(\"mesh\", _extends({\n        key: s\n      }, fillMeshProps), React.createElement(\"shapeGeometry\", {\n        args: [shape]\n      }), React.createElement(\"meshBasicMaterial\", _extends({\n        color: path.userData.style.fill,\n        opacity: path.userData.style.fillOpacity,\n        transparent: true,\n        side: DoubleSide,\n        depthWrite: false\n      }, fillMaterial)));\n    }), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== undefined && path.userData.style.stroke !== 'none' && path.subPaths.map(function (_subPath, s) {\n      return React.createElement(\"mesh\", _extends({\n        key: s,\n        geometry: strokeGeometries[p][s]\n      }, strokeMeshProps), React.createElement(\"meshBasicMaterial\", _extends({\n        color: path.userData.style.stroke,\n        opacity: path.userData.style.strokeOpacity,\n        transparent: true,\n        side: DoubleSide,\n        depthWrite: false\n      }, strokeMaterial)));\n    }));\n  })));\n});\nexport { Svg };","map":{"version":3,"names":["_extends","useLoader","React","forwardRef","useMemo","useEffect","Fragment","DoubleSide","SVGLoader","Svg","R3FSvg","_ref","ref","src","skipFill","skipStrokes","fillMaterial","strokeMaterial","fillMeshProps","strokeMeshProps","props","_objectWithoutProperties","_excluded","svg","startsWith","strokeGeometries","paths","map","path","_path$userData","userData","style","stroke","undefined","subPaths","subPath","pointsToStroke","getPoints","forEach","group","g","dispose","createElement","scale","p","_path$userData2","_path$userData3","key","fill","createShapes","shape","s","args","color","opacity","fillOpacity","transparent","side","depthWrite","_subPath","geometry","strokeOpacity"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/node_modules/@react-three/drei/core/Svg.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect, Fragment } from 'react';\nimport { DoubleSide } from 'three';\nimport { SVGLoader } from 'three-stdlib';\n\nconst Svg = /*#__PURE__*/forwardRef(function R3FSvg({\n  src,\n  skipFill,\n  skipStrokes,\n  fillMaterial,\n  strokeMaterial,\n  fillMeshProps,\n  strokeMeshProps,\n  ...props\n}, ref) {\n  const svg = useLoader(SVGLoader, !src.startsWith('<svg') ? src : `data:image/svg+xml;utf8,${src}`);\n  const strokeGeometries = useMemo(() => skipStrokes ? [] : svg.paths.map(path => {\n    var _path$userData;\n\n    return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === undefined || path.userData.style.stroke === 'none' ? null : path.subPaths.map(subPath => SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style));\n  }), [svg, skipStrokes]);\n  useEffect(() => {\n    return () => strokeGeometries.forEach(group => group && group.map(g => g.dispose()));\n  }, [strokeGeometries]);\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"object3D\", {\n    scale: [1, -1, 1]\n  }, svg.paths.map((path, p) => {\n    var _path$userData2, _path$userData3;\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: p\n    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== undefined && path.userData.style.fill !== 'none' && SVGLoader.createShapes(path).map((shape, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s\n    }, fillMeshProps), /*#__PURE__*/React.createElement(\"shapeGeometry\", {\n      args: [shape]\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.fill,\n      opacity: path.userData.style.fillOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, fillMaterial)))), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== undefined && path.userData.style.stroke !== 'none' && path.subPaths.map((_subPath, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s,\n      geometry: strokeGeometries[p][s]\n    }, strokeMeshProps), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.stroke,\n      opacity: path.userData.style.strokeOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, strokeMaterial)))));\n  })));\n});\n\nexport { Svg };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}