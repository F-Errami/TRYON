{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport CameraButton from \"../components/CameraButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReconstructionMorphologieScreen = function ReconstructionMorphologieScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var onPhotoTaken = function onPhotoTaken(photo) {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert('Modal has been closed.');\n        setModalVisible(!modalVisible);\n        hideModal();\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Voici les instructions pour ajouter une nouvelle morphologie!\"\n          }), _jsx(Text, {\n            style: styles.modalText,\n            children: \"- Prends une photo de ton visage\"\n          }), _jsx(Text, {\n            style: styles.modalText,\n            children: \"- Mets tes mesures dans le formulaire \"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Fermer\"\n            })\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Ouvrir les Instructions\"\n      })\n    }), _jsx(CameraButton, {\n      onPhotoTaken: onPhotoTaken\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#da70d6'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});\nexport default ReconstructionMorphologieScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Modal","Alert","Pressable","CameraButton","jsx","_jsx","jsxs","_jsxs","ReconstructionMorphologieScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","onPhotoTaken","photo","style","styles","container","children","animationType","transparent","visible","onRequestClose","alert","hideModal","centeredView","modalView","modalText","button","buttonClose","onPress","textStyle","buttonOpen","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/ReconstructionMorphologieScreen.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, Modal, Alert, Pressable } from 'react-native';\r\nimport CameraButton from '../components/CameraButton'; // Import the CameraButton component\r\n\r\nconst ReconstructionMorphologieScreen = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const onPhotoTaken = (photo) => {\r\n    // Handle the captured photo here, e.g., save it, display it, etc.\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.');\r\n          setModalVisible(!modalVisible);\r\n          hideModal();\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Voici les instructions pour ajouter une nouvelle morphologie!</Text>  \r\n            <Text style={styles.modalText}>- Prends une photo de ton visage</Text>\r\n            <Text style={styles.modalText}>- Mets tes mesures dans le formulaire </Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}>\r\n              <Text style={styles.textStyle}>Fermer</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}>\r\n        <Text style={styles.textStyle}>Ouvrir les Instructions</Text>\r\n      </Pressable>\r\n\r\n      <CameraButton onPhotoTaken={onPhotoTaken} /> \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: '#da70d6',\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#2196F3',\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default ReconstructionMorphologieScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}