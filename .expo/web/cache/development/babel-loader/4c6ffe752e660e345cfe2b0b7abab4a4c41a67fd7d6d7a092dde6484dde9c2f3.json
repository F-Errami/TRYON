{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Formulaire = function Formulaire() {\n  var _useForm = useForm({\n      defaultValues: {\n        firstName: \"\",\n        lastName: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: true\n      },\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          onBlur = _ref$field.onBlur,\n          value = _ref$field.value;\n        return _jsx(TextInput, {\n          placeholder: \"First name\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"firstName\"\n    }), errors.firstName && _jsx(Text, {\n      children: \"This is required.\"\n    }), _jsx(Controller, {\n      control: control,\n      rules: {\n        maxLength: 100\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(TextInput, {\n          placeholder: \"Last name\",\n          onBlur: onBlur,\n          onChangeText: onChange,\n          value: value\n        });\n      },\n      name: \"lastName\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit(onSubmit)\n    })]\n  });\n};\nexport default Formulaire;","map":{"version":3,"names":["useForm","Controller","jsx","_jsx","jsxs","_jsxs","Formulaire","_useForm","defaultValues","firstName","lastName","control","handleSubmit","errors","formState","onSubmit","data","console","log","View","children","rules","required","render","_ref","_ref$field","field","onChange","onBlur","value","TextInput","placeholder","onChangeText","name","Text","maxLength","_ref2","_ref2$field","Button","title","onPress"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/Formulaire.js"],"sourcesContent":["import { Text, View, TextInput, Button } from \"react-native\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\n\r\nconst Formulaire = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    },\r\n  })\r\n  const onSubmit = (data) => console.log(data)\r\n\r\n  return (\r\n    <View>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            placeholder=\"First name\"\r\n            onBlur={onBlur}\r\n            onChangeText={onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"firstName\"\r\n      />\r\n      {errors.firstName && <Text>This is required.</Text>}\r\n\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          maxLength: 100,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            placeholder=\"Last name\"\r\n            onBlur={onBlur}\r\n            onChangeText={onChange}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"lastName\"\r\n      />\r\n\r\n      <Button title=\"Submit\" onPress={handleSubmit(onSubmit)} />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Formulaire;"],"mappings":";;;;AACA,SAASA,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,QAAA,GAIIP,OAAO,CAAC;MACVQ,aAAa,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IARAC,OAAO,GAAAJ,QAAA,CAAPI,OAAO;IACPC,YAAY,GAAAL,QAAA,CAAZK,YAAY;IACCC,MAAM,GAAAN,QAAA,CAAnBO,SAAS,CAAID,MAAM;EAOrB,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI;IAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAA;EAE5C,OACEX,KAAA,CAACc,IAAI;IAAAC,QAAA,GACHjB,IAAA,CAACF,UAAU;MACTU,OAAO,EAAEA,OAAQ;MACjBU,KAAK,EAAE;QACLC,QAAQ,EAAE;MACZ,CAAE;MACFC,MAAM,EAAE,SAAAA,OAAAC,IAAA;QAAA,IAAAC,UAAA,GAAAD,IAAA,CAAGE,KAAK;UAAIC,QAAQ,GAAAF,UAAA,CAARE,QAAQ;UAAEC,MAAM,GAAAH,UAAA,CAANG,MAAM;UAAEC,KAAK,GAAAJ,UAAA,CAALI,KAAK;QAAA,OACzC1B,IAAA,CAAC2B,SAAS;UACRC,WAAW,EAAC,YAAY;UACxBH,MAAM,EAAEA,MAAO;UACfI,YAAY,EAAEL,QAAS;UACvBE,KAAK,EAAEA;QAAM,CACd,CAAC;MAAA,CACF;MACFI,IAAI,EAAC;IAAW,CACjB,CAAC,EACDpB,MAAM,CAACJ,SAAS,IAAIN,IAAA,CAAC+B,IAAI;MAAAd,QAAA,EAAC;IAAiB,CAAM,CAAC,EAEnDjB,IAAA,CAACF,UAAU;MACTU,OAAO,EAAEA,OAAQ;MACjBU,KAAK,EAAE;QACLc,SAAS,EAAE;MACb,CAAE;MACFZ,MAAM,EAAE,SAAAA,OAAAa,KAAA;QAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGV,KAAK;UAAIC,QAAQ,GAAAU,WAAA,CAARV,QAAQ;UAAEC,MAAM,GAAAS,WAAA,CAANT,MAAM;UAAEC,KAAK,GAAAQ,WAAA,CAALR,KAAK;QAAA,OACzC1B,IAAA,CAAC2B,SAAS;UACRC,WAAW,EAAC,WAAW;UACvBH,MAAM,EAAEA,MAAO;UACfI,YAAY,EAAEL,QAAS;UACvBE,KAAK,EAAEA;QAAM,CACd,CAAC;MAAA,CACF;MACFI,IAAI,EAAC;IAAU,CAChB,CAAC,EAEF9B,IAAA,CAACmC,MAAM;MAACC,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE5B,YAAY,CAACG,QAAQ;IAAE,CAAE,CAAC;EAAA,CACtD,CAAC;AAEX,CAAC;AAED,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}