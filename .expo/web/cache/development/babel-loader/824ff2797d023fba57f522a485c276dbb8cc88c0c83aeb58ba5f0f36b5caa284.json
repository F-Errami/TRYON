{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReconstructionMorphologieScreen = function ReconstructionMorphologieScreen() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        children: \"Reconstruction Morphologie Screen\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert('Modal has been closed.');\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Hello World!\"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Hide Modal\"\n            })\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Show Modal\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: 'lightblue',\n    paddingVertical: 40,\n    borderRadius: 0,\n    width: '100%',\n    marginBottom: 0\n  },\n  buttonText: {\n    fontSize: 16,\n    color: 'white',\n    textAlign: 'left',\n    paddingLeft: 10\n  }\n});\nexport default ReconstructionMorphologieScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","ReconstructionMorphologieScreen","style","styles","container","children","header","Modal","animationType","transparent","visible","modalVisible","onRequestClose","Alert","alert","setModalVisible","centeredView","modalView","modalText","Pressable","button","buttonClose","onPress","textStyle","buttonOpen","create","flex","justifyContent","alignItems","content","marginTop","backgroundColor","paddingVertical","borderRadius","width","marginBottom","buttonText","fontSize","color","textAlign","paddingLeft"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/ReconstructionMorphologieScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\n\r\n\r\nconst ReconstructionMorphologieScreen = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text>Reconstruction Morphologie Screen</Text>\r\n      </View>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.');\r\n          setModalVisible(!modalVisible);\r\n        }}>\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Hello World!</Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}>\r\n              <Text style={styles.textStyle}>Hide Modal</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}>\r\n        <Text style={styles.textStyle}>Show Modal</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: 'lightblue',\r\n    paddingVertical: 40,\r\n    borderRadius: 0,\r\n    width: '100%',\r\n    marginBottom: 0,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n    textAlign: 'left',\r\n    paddingLeft: 10,\r\n  }\r\n});\r\n\r\nexport default ReconstructionMorphologieScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK1B,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAA,EAAS;EAC5C,OACED,KAAA,CAACN,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BP,IAAA,CAACJ,IAAI;MAACQ,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,EACzBP,IAAA,CAACH,IAAI;QAAAU,QAAA,EAAC;MAAiC,CAAM;IAAC,CAC1C,CAAC,EACPP,IAAA,CAACS,KAAK;MACJC,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAEC,YAAa;MACtBC,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACrCC,eAAe,CAAC,CAACJ,YAAY,CAAC;MAChC,CAAE;MAAAN,QAAA,EACFP,IAAA,CAACJ,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACa,YAAa;QAAAX,QAAA,EAC/BL,KAAA,CAACN,IAAI;UAACQ,KAAK,EAAEC,MAAM,CAACc,SAAU;UAAAZ,QAAA,GAC5BP,IAAA,CAACH,IAAI;YAACO,KAAK,EAAEC,MAAM,CAACe,SAAU;YAAAb,QAAA,EAAC;UAAY,CAAM,CAAC,EAClDP,IAAA,CAACqB,SAAS;YACRjB,KAAK,EAAE,CAACC,MAAM,CAACiB,MAAM,EAAEjB,MAAM,CAACkB,WAAW,CAAE;YAC3CC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMP,eAAe,CAAC,CAACJ,YAAY,CAAC;YAAA,CAAC;YAAAN,QAAA,EAC9CP,IAAA,CAACH,IAAI;cAACO,KAAK,EAAEC,MAAM,CAACoB,SAAU;cAAAlB,QAAA,EAAC;YAAU,CAAM;UAAC,CACvC,CAAC;QAAA,CACR;MAAC,CACH;IAAC,CACF,CAAC,EACRP,IAAA,CAACqB,SAAS;MACRjB,KAAK,EAAE,CAACC,MAAM,CAACiB,MAAM,EAAEjB,MAAM,CAACqB,UAAU,CAAE;MAC1CF,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,eAAe,CAAC,IAAI,CAAC;MAAA,CAAC;MAAAV,QAAA,EACrCP,IAAA,CAACH,IAAI;QAACO,KAAK,EAAEC,MAAM,CAACoB,SAAU;QAAAlB,QAAA,EAAC;MAAU,CAAM;IAAC,CACvC,CAAC;EAAA,CACR,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGP,UAAU,CAAC6B,MAAM,CAAC;EAC/BrB,SAAS,EAAE;IACTsB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACPH,IAAI,EAAE,CAAC;IACPI,SAAS,EAAE;EACb,CAAC;EACDV,MAAM,EAAE;IACNW,eAAe,EAAE,WAAW;IAC5BC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,MAAM;IACbC,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAevC,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}