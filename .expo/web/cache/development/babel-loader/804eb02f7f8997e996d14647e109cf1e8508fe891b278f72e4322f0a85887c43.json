{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport VideoButton from \"../components/VideoButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReconstructionVetementScreen = function ReconstructionVetementScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var onPhotoTaken = function onPhotoTaken(photo) {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Text, {\n          style: styles.modalText,\n          children: \"Voici les instructions pour ajouter un nouveau objet!\"\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: \"- Prends une photo de ton objet sous un angle de \"\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: \"- Prends une autre photo de ton objet mais sous un angle de  \"\n        }), _jsx(Pressable, {\n          style: [styles.button, styles.buttonClose],\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Fermer\"\n          })\n        })]\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \" ? \"\n      })\n    }), _jsx(View, {\n      children: _jsx(VideoButton, {\n        onPhotoTaken: onPhotoTaken\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n    flexDirection: 'row'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: '#da70d6'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  buttonForm: {\n    borderRadius: 20,\n    padding: 12,\n    marginTop: 3,\n    marginLeft: 20,\n    backgroundColor: '#da70d6'\n  }\n});\nexport default ReconstructionVetementScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Modal","Pressable","VideoButton","jsx","_jsx","jsxs","_jsxs","ReconstructionVetementScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","onPhotoTaken","photo","style","styles","container","children","animationType","transparent","visible","onRequestClose","modalView","modalText","button","buttonClose","onPress","textStyle","buttonOpen","create","flex","justifyContent","alignItems","marginTop","flexDirection","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","position","top","right","color","fontWeight","textAlign","marginBottom","buttonForm","marginLeft"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/ReconstructionVetementScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Modal, Pressable } from 'react-native';\r\nimport VideoButton from '../components/VideoButton';\r\n\r\n\r\nconst ReconstructionVetementScreen = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const onPhotoTaken = (photo) => {\r\n    // Handle the captured photo here, e.g., save it, display it, etc.\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.modalText}>Voici les instructions pour ajouter un nouveau objet!</Text>\r\n          <Text style={styles.modalText}>- Prends une photo de ton objet sous un angle de </Text>\r\n          <Text style={styles.modalText}>- Prends une autre photo de ton objet mais sous un angle de  </Text>\r\n          <Pressable\r\n            style={[styles.button, styles.buttonClose]}\r\n            onPress={() => setModalVisible(!modalVisible)}>\r\n            <Text style={styles.textStyle}>Fermer</Text>\r\n          </Pressable>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}>\r\n        <Text style={styles.textStyle}> ? </Text>\r\n      </Pressable>\r\n\r\n      <View>\r\n        <VideoButton onPhotoTaken={onPhotoTaken} />\r\n      </View> \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22,\r\n    flexDirection: 'row',\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: '#da70d6',\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#2196F3',\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  buttonForm: {\r\n    borderRadius: 20,\r\n    padding: 12,\r\n    marginTop: 3,\r\n    marginLeft: 20,\r\n    backgroundColor: '#da70d6',\r\n  },\r\n});\r\n\r\nexport default ReconstructionVetementScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}