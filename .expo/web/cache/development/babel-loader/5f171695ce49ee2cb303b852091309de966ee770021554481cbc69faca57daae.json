{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ReconstructionMorphologieScreen = function ReconstructionMorphologieScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert('Modal has been closed.');\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Here are the instructions\"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Hide Instructions\"\n            })\n          })]\n        })\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Show Instructions\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  }\n});\nexport default ReconstructionMorphologieScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","Modal","jsx","_jsx","jsxs","_jsxs","ReconstructionMorphologieScreen","_useState","useState","_useState2","_slicedToArray","modalVisible","setModalVisible","style","styles","container","children","animationType","transparent","visible","onRequestClose","Alert","alert","centeredView","modalView","modalText","Pressable","button","buttonClose","onPress","textStyle","buttonOpen","create","flex","justifyContent","alignItems","marginTop"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/ReconstructionMorphologieScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Modal } from 'react-native';\r\n\r\nconst ReconstructionMorphologieScreen = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert('Modal has been closed.');\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Here are the instructions</Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}>\r\n              <Text style={styles.textStyle}>Hide Instructions</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <Pressable\r\n        style={[styles.button, styles.buttonOpen]}\r\n        onPress={() => setModalVisible(true)}>\r\n        <Text style={styles.textStyle}>Show Instructions</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22\r\n  }\r\n});\r\n\r\nexport default ReconstructionMorphologieScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAA,EAAS;EAC5C,IAAAC,SAAA,GAAwCC,QAAQ,CAAC,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAhDI,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,OACEJ,KAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bb,IAAA,CAACF,KAAK;MACJgB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAER,YAAa;MACtBS,cAAc,EAAE,SAAAA,eAAA,EAAM;QACpBC,KAAK,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACrCV,eAAe,CAAC,CAACD,YAAY,CAAC;MAChC,CAAE;MAAAK,QAAA,EAEFb,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACS,YAAa;QAAAP,QAAA,EAC/BX,KAAA,CAACP,IAAI;UAACe,KAAK,EAAEC,MAAM,CAACU,SAAU;UAAAR,QAAA,GAC5Bb,IAAA,CAACJ,IAAI;YAACc,KAAK,EAAEC,MAAM,CAACW,SAAU;YAAAT,QAAA,EAAC;UAAyB,CAAM,CAAC,EAC/Db,IAAA,CAACuB,SAAS;YACRb,KAAK,EAAE,CAACC,MAAM,CAACa,MAAM,EAAEb,MAAM,CAACc,WAAW,CAAE;YAC3CC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMjB,eAAe,CAAC,CAACD,YAAY,CAAC;YAAA,CAAC;YAAAK,QAAA,EAC9Cb,IAAA,CAACJ,IAAI;cAACc,KAAK,EAAEC,MAAM,CAACgB,SAAU;cAAAd,QAAA,EAAC;YAAiB,CAAM;UAAC,CAC9C,CAAC;QAAA,CACR;MAAC,CACH;IAAC,CACF,CAAC,EACRb,IAAA,CAACuB,SAAS;MACRb,KAAK,EAAE,CAACC,MAAM,CAACa,MAAM,EAAEb,MAAM,CAACiB,UAAU,CAAE;MAC1CF,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMjB,eAAe,CAAC,IAAI,CAAC;MAAA,CAAC;MAAAI,QAAA,EACrCb,IAAA,CAACJ,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACgB,SAAU;QAAAd,QAAA,EAAC;MAAiB,CAAM;IAAC,CAC9C,CAAC;EAAA,CACR,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGd,UAAU,CAACgC,MAAM,CAAC;EAC/BjB,SAAS,EAAE;IACTkB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe9B,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}