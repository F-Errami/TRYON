{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Formulaire = function Formulaire(formVisible) {\n  var _useForm = useForm({\n      defaultValues: {\n        firstName: \"\",\n        lastName: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n  return _jsx(View, {\n    children: _jsxs(Modal, {\n      visible: formVisible,\n      children: [_jsx(Controller, {\n        control: control,\n        rules: {\n          required: true\n        },\n        render: function render(_ref) {\n          var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n          return _jsx(TextInput, {\n            placeholder: \"First name\",\n            onBlur: onBlur,\n            onChangeText: onChange,\n            value: value\n          });\n        },\n        name: \"firstName\"\n      }), errors.firstName && _jsx(Text, {\n        children: \"This is required.\"\n      }), _jsx(Controller, {\n        control: control,\n        rules: {\n          maxLength: 100\n        },\n        render: function render(_ref2) {\n          var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n          return _jsx(TextInput, {\n            placeholder: \"Last name\",\n            onBlur: onBlur,\n            onChangeText: onChange,\n            value: value\n          });\n        },\n        name: \"lastName\"\n      }), _jsx(Button, {\n        title: \"Submit\",\n        onPress: handleSubmit(onSubmit)\n      })]\n    })\n  });\n};\nexport default Formulaire;","map":{"version":3,"names":["useForm","Controller","jsx","_jsx","jsxs","_jsxs","Formulaire","formVisible","_useForm","defaultValues","firstName","lastName","control","handleSubmit","errors","formState","onSubmit","data","console","log","View","children","Modal","visible","rules","required","render","_ref","_ref$field","field","onChange","onBlur","value","TextInput","placeholder","onChangeText","name","Text","maxLength","_ref2","_ref2$field","Button","title","onPress"],"sources":["C:/Users/jouai/Desktop/Telecom/S9/image/Projet vision/TRYON/screens/Formulaire.js"],"sourcesContent":["import { Text, View, TextInput, Button, Modal } from \"react-native\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\n\r\nconst Formulaire = (formVisible) => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    },\r\n  })\r\n  const onSubmit = (data) => console.log(data)\r\n\r\n  return (\r\n    <View>\r\n      <Modal visible={formVisible}>\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, onBlur, value } }) => (\r\n            <TextInput\r\n              placeholder=\"First name\"\r\n              onBlur={onBlur}\r\n              onChangeText={onChange}\r\n              value={value}\r\n            />\r\n          )}\r\n          name=\"firstName\"\r\n        />\r\n        {errors.firstName && <Text>This is required.</Text>}\r\n\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            maxLength: 100,\r\n          }}\r\n          render={({ field: { onChange, onBlur, value } }) => (\r\n            <TextInput\r\n              placeholder=\"Last name\"\r\n              onBlur={onBlur}\r\n              onChangeText={onChange}\r\n              value={value}\r\n            />\r\n          )}\r\n          name=\"lastName\"\r\n        />\r\n\r\n        <Button title=\"Submit\" onPress={handleSubmit(onSubmit)} />\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Formulaire;"],"mappings":";;;;;AACA,SAASA,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,WAAW,EAAK;EAClC,IAAAC,QAAA,GAIIR,OAAO,CAAC;MACVS,aAAa,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IARAC,OAAO,GAAAJ,QAAA,CAAPI,OAAO;IACPC,YAAY,GAAAL,QAAA,CAAZK,YAAY;IACCC,MAAM,GAAAN,QAAA,CAAnBO,SAAS,CAAID,MAAM;EAOrB,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI;IAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAA;EAE5C,OACEd,IAAA,CAACiB,IAAI;IAAAC,QAAA,EACHhB,KAAA,CAACiB,KAAK;MAACC,OAAO,EAAEhB,WAAY;MAAAc,QAAA,GAC1BlB,IAAA,CAACF,UAAU;QACTW,OAAO,EAAEA,OAAQ;QACjBY,KAAK,EAAE;UACLC,QAAQ,EAAE;QACZ,CAAE;QACFC,MAAM,EAAE,SAAAA,OAAAC,IAAA;UAAA,IAAAC,UAAA,GAAAD,IAAA,CAAGE,KAAK;YAAIC,QAAQ,GAAAF,UAAA,CAARE,QAAQ;YAAEC,MAAM,GAAAH,UAAA,CAANG,MAAM;YAAEC,KAAK,GAAAJ,UAAA,CAALI,KAAK;UAAA,OACzC7B,IAAA,CAAC8B,SAAS;YACRC,WAAW,EAAC,YAAY;YACxBH,MAAM,EAAEA,MAAO;YACfI,YAAY,EAAEL,QAAS;YACvBE,KAAK,EAAEA;UAAM,CACd,CAAC;QAAA,CACF;QACFI,IAAI,EAAC;MAAW,CACjB,CAAC,EACDtB,MAAM,CAACJ,SAAS,IAAIP,IAAA,CAACkC,IAAI;QAAAhB,QAAA,EAAC;MAAiB,CAAM,CAAC,EAEnDlB,IAAA,CAACF,UAAU;QACTW,OAAO,EAAEA,OAAQ;QACjBY,KAAK,EAAE;UACLc,SAAS,EAAE;QACb,CAAE;QACFZ,MAAM,EAAE,SAAAA,OAAAa,KAAA;UAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGV,KAAK;YAAIC,QAAQ,GAAAU,WAAA,CAARV,QAAQ;YAAEC,MAAM,GAAAS,WAAA,CAANT,MAAM;YAAEC,KAAK,GAAAQ,WAAA,CAALR,KAAK;UAAA,OACzC7B,IAAA,CAAC8B,SAAS;YACRC,WAAW,EAAC,WAAW;YACvBH,MAAM,EAAEA,MAAO;YACfI,YAAY,EAAEL,QAAS;YACvBE,KAAK,EAAEA;UAAM,CACd,CAAC;QAAA,CACF;QACFI,IAAI,EAAC;MAAU,CAChB,CAAC,EAEFjC,IAAA,CAACsC,MAAM;QAACC,KAAK,EAAC,QAAQ;QAACC,OAAO,EAAE9B,YAAY,CAACG,QAAQ;MAAE,CAAE,CAAC;IAAA,CACrD;EAAC,CACJ,CAAC;AAEX,CAAC;AAED,eAAeV,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}